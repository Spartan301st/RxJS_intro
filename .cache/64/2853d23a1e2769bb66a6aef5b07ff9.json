{"id":"index.js","dependencies":[{"name":"C:\\Users\\Spartan301st\\Documents\\Angular_Projects\\Section_10\\rxjs_intro\\package.json","includedInParent":true,"mtime":1625261731954},{"name":"rxjs","loc":{"line":280,"column":36,"index":8710},"parent":"C:\\Users\\Spartan301st\\Documents\\Angular_Projects\\Section_10\\rxjs_intro\\src\\index.js","resolved":"C:\\Users\\Spartan301st\\Documents\\Angular_Projects\\Section_10\\rxjs_intro\\node_modules\\rxjs\\dist\\esm5\\index.js"},{"name":"rxjs/operators","loc":{"line":281,"column":43,"index":8762},"parent":"C:\\Users\\Spartan301st\\Documents\\Angular_Projects\\Section_10\\rxjs_intro\\src\\index.js","resolved":"C:\\Users\\Spartan301st\\Documents\\Angular_Projects\\Section_10\\rxjs_intro\\node_modules\\rxjs\\dist\\esm5\\operators\\index.js"},{"name":"rxjs/ajax","loc":{"line":282,"column":21,"index":8802},"parent":"C:\\Users\\Spartan301st\\Documents\\Angular_Projects\\Section_10\\rxjs_intro\\src\\index.js","resolved":"C:\\Users\\Spartan301st\\Documents\\Angular_Projects\\Section_10\\rxjs_intro\\node_modules\\rxjs\\dist\\esm5\\ajax\\index.js"}],"generated":{"js":"\"use strict\";\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _ajax = require(\"rxjs/ajax\");\n\n// import { Observable } from \"rxjs\";\n// import { interval } from \"rxjs\";\n// import { timer } from \"rxjs\";\n// an instance of an observable emmiting data to an observer\n// const observable = new Observable((subscriber) => {\n//   const id = setInterval(() => {\n//     subscriber.next(\"testing...\");\n//     console.log(`leak of memo`);\n//   }, 1000);\n//   // subscriber.complete();\n//   return () => {\n//     clearInterval(id);\n//   };\n// });\n// interval operator with the similar functionality as the observable we have imperatively written above\n// const observable = interval(2000);\n// const observable = timer(0, 500);\n// using subscribe method to pass the data to observer\n// saving to the subscription, so that we can unsubscribe from the observable\n// const subscription = observable.subscribe(\n//   //   {\n//   //   next: (value) => {\n//   //     console.log(value);\n//   //   },\n//   //   // completion indication\n//   //   complete: () => {\n//   //     console.log(`complete called in observable`);\n//   //   },\n//   //   // error handling\n//   //   error: (err) => {\n//   //     console.error(err);\n//   //   },\n//   // }\n//   console.log\n// );\n// unsubscribe after 4 seconds\n// setTimeout(() => {\n//   subscription.unsubscribe();\n// }, 4000);\n// An ex. of a syncronous observable\n// an instance of an observable emmiting data to an observer\n// const observable = new Observable((subscriber) => {\n//   // calling mutiple nexts\n//   subscriber.next(\"Hello hobbit\");\n//   subscriber.error(\"Test error\");\n//   subscriber.next(\"Ready to visit the Middle Earth?\");\n//   // manually terminating the observable, to prevent the memo leak\n//   subscriber.complete();\n//   // won't run\n//   subscriber.next(\"Or MORDOR?\");\n// });\n// // fromEvent operator\n// import { fromEvent } from \"rxjs\";\n// const observable = fromEvent(document, \"click\");\n// const subscription = observable.subscribe(console.log);\n// of, from operators\n// import { of, from } from \"rxjs\";\n// // const observable = of([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n// // const observable = from([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n// // const observable = from(\"LOTR\");\n// const observable = from(fetch(\"https://jsonplaceholder.typicode.com/todos/1\"));\n// // const subscription = observable.subscribe(console.log);\n// const subscription = observable.subscribe({\n//   next(value) {\n//     console.log(value);\n//   },\n//   complete() {\n//     console.log(`Complete!`);\n//   },\n// });\n// console.log(`hello`);\n// import { of, from } from \"rxjs\";\n// import { map } from \"rxjs/operators\";\n// // original observable\n// const observable = of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n// // cloned observable\n// // const cloneObservable = observable.pipe(map((value) => `${value}$`));\n// // subscribing to the original observable with the observer\n// const subscription = observable.subscribe({\n//   next(value) {\n//     console.log(value);\n//   },\n//   complete() {\n//     console.log(`DONE`);\n//   },\n// });\n// // // subscribing to the clone observable with yet another observer\n// // const subscription2 = cloneObservable.subscribe({\n// //   next(value) {\n// //     console.log(value);\n// //   },\n// //   complete() {\n// //     console.log(`DONE`);\n// //   },\n// // });\n// console.log(`Here`);\n// import { of, from, fromEvent } from \"rxjs\";\n// import { map, pluck, filter } from \"rxjs/operators\";\n// // listening or a keydown event on the doc\n// const observable = fromEvent(document, \"keydown\").pipe(\n//   // map((event) => event.code)\n//   // pluck(\"code\"),\n//   // filter((code) => code === \"Space\")\n//   map((event) => event.code === \"Space\" && \"Space\")\n// );\n// // subscribing to the original observable with the observer\n// const subscription = observable.subscribe({\n//   next(value) {\n//     console.log(value);\n//   },\n//   complete() {\n//     console.log(`DONE`);\n//   },\n// });\n// // reduce, take, scan operators\n// // import { of } from \"rxjs\";\n// import { interval } from \"rxjs\";\n// import { reduce, take, scan, tap } from \"rxjs/operators\";\n// // listening or a keydown event on the doc\n// // const observable = of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10).pipe(\n// const observable = interval(200).pipe(\n//   take(5),\n//   // tap((val) => console.log(val)),\n//   // tap(console.log),\n//   tap({\n//     next(val) {\n//       console.log(val);\n//     },\n//   }),\n//   reduce((acc, val) => acc + val, 0)\n//   // scan((acc, val) => acc + val, 0)\n// );\n// // subscribing to the original observable with the observer\n// const subscription = observable.subscribe({\n//   next(value) {\n//     console.log(value);\n//   },\n//   complete() {\n//     console.log(`DONE`);\n//   },\n// });\n// import { fromEvent } from \"rxjs\";\n// import { map } from \"rxjs/operators\";\n// import { ajax } from \"rxjs/ajax\";\n// // listening or a keydown event on the doc\n// // const observable = of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10).pipe(\n// const observable = fromEvent(document.querySelector(\"#btn\"), \"click\").pipe(\n//   map(() => {\n//     return ajax.getJSON(\"https://jsonplaceholder.typicode.com/todos/1\");\n//   })\n// );\n// // subscribing to the original observable with the observer\n// const subscription = observable.subscribe({\n//   next(value) {\n//     // console.log(value);\n//     // as value is an observable we should subscribe to it first to get the final value\n//     value.subscribe(console.log);\n//   },\n//   complete() {\n//     console.log(`DONE`);\n//   },\n// });\n// // using mergeMap operator to flatten the observables\n// import { fromEvent, interval } from \"rxjs\";\n// import { map, mergeMap, take, tap } from \"rxjs/operators\";\n// import { ajax } from \"rxjs/ajax\";\n// // listening or a keydown event on the doc\n// // const observable = of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10).pipe(\n// const observable = fromEvent(document.querySelector(\"#btn\"), \"click\").pipe(\n//   mergeMap(() => {\n//     // return ajax.getJSON(\"https://jsonplaceholder.typicode.com/todos/1\");\n//     return interval(1000).pipe(tap(console.log), take(5));\n//   })\n//   // take(5)\n// );\n// // subscribing to the original observable with the observer\n// const subscription = observable.subscribe({\n//   next(value) {\n//     // no need to subscribe to a value as mergeMap handles that for us\n//     console.log(value);\n//   },\n//   complete() {\n//     console.log(`DONE`);\n//   },\n// });\n// // using switchMap operator to flatten the observables\n// import { fromEvent, interval } from \"rxjs\";\n// import { map, switchMap, take, tap } from \"rxjs/operators\";\n// import { ajax } from \"rxjs/ajax\";\n// // listening or a keydown event on the doc\n// // const observable = of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10).pipe(\n// const observable = fromEvent(document.querySelector(\"#btn\"), \"click\").pipe(\n//   switchMap(() => {\n//     // return interval(1000).pipe(\n//     return ajax.getJSON(\"https://jsonplaceholder.typicode.com/todos/1\").pipe(\n//       take(5),\n//       tap({\n//         complete() {\n//           console.log(`Inner observable has completed`);\n//         },\n//       })\n//     );\n//   })\n//   // take(5)\n// );\n// // subscribing to the original observable with the observer\n// const subscription = observable.subscribe({\n//   next(value) {\n//     // no need to subscribe to a value as switchMap handles that for us\n//     console.log(value);\n//   },\n//   complete() {\n//     console.log(`DONE`);\n//   },\n// });\n// // using concatMap operator to flatten the observables\n// import { fromEvent, interval } from \"rxjs\";\n// import { map, concatMap, take, tap } from \"rxjs/operators\";\n// import { ajax } from \"rxjs/ajax\";\n// // listening or a keydown event on the doc\n// // const observable = of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10).pipe(\n// const observable = fromEvent(document.querySelector(\"#btn\"), \"click\").pipe(\n//   concatMap(() => {\n//     // return interval(1000).pipe(\n//     return ajax.getJSON(\"https://jsonplaceholder.typicode.com/todos/1\").pipe(\n//       take(5),\n//       tap({\n//         complete() {\n//           console.log(`Inner observable has completed`);\n//         },\n//       })\n//     );\n//   })\n//   // take(5)\n// );\n// // subscribing to the original observable with the observer\n// const subscription = observable.subscribe({\n//   next(value) {\n//     // no need to subscribe to a value as concatMap handles that for us\n//     console.log(value);\n//   },\n//   complete() {\n//     console.log(`DONE`);\n//   },\n// });\n// using exhaustMap operator to flatten the observables\n// listening or a keydown event on the doc\n// const observable = of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10).pipe(\nvar observable = (0, _rxjs.fromEvent)(document.querySelector(\"#btn\"), \"click\").pipe((0, _operators.exhaustMap)(function () {\n  // return interval(1000).pipe(\n  return _ajax.ajax.getJSON(\"https://jsonplaceholder.typicode.com/todos/1\").pipe((0, _operators.take)(5), (0, _operators.tap)({\n    complete: function complete() {\n      console.log(\"Inner observable has completed\");\n    }\n  }));\n}) // take(5)\n); // subscribing to the original observable with the observer\n\nvar subscription = observable.subscribe({\n  next: function next(value) {\n    // no need to subscribe to a value as exhaustMap handles that for us\n    console.log(value);\n  },\n  complete: function complete() {\n    console.log(\"DONE\");\n  }\n});"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"index.js","original":{"line":280,"column":0}},{"generated":{"line":5,"column":0},"source":"index.js","original":{"line":281,"column":0}},{"generated":{"line":7,"column":0},"source":"index.js","original":{"line":282,"column":0}},{"generated":{"line":9,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"index.js","original":{"line":2,"column":0}},{"generated":{"line":11,"column":0},"source":"index.js","original":{"line":3,"column":0}},{"generated":{"line":12,"column":0},"source":"index.js","original":{"line":4,"column":0}},{"generated":{"line":13,"column":0},"source":"index.js","original":{"line":5,"column":0}},{"generated":{"line":14,"column":0},"source":"index.js","original":{"line":6,"column":0}},{"generated":{"line":15,"column":0},"source":"index.js","original":{"line":7,"column":0}},{"generated":{"line":16,"column":0},"source":"index.js","original":{"line":8,"column":0}},{"generated":{"line":17,"column":0},"source":"index.js","original":{"line":9,"column":0}},{"generated":{"line":18,"column":0},"source":"index.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"index.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"index.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"index.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"index.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"index.js","original":{"line":18,"column":0}},{"generated":{"line":24,"column":0},"source":"index.js","original":{"line":19,"column":0}},{"generated":{"line":25,"column":0},"source":"index.js","original":{"line":20,"column":0}},{"generated":{"line":26,"column":0},"source":"index.js","original":{"line":21,"column":0}},{"generated":{"line":27,"column":0},"source":"index.js","original":{"line":22,"column":0}},{"generated":{"line":28,"column":0},"source":"index.js","original":{"line":23,"column":0}},{"generated":{"line":29,"column":0},"source":"index.js","original":{"line":24,"column":0}},{"generated":{"line":30,"column":0},"source":"index.js","original":{"line":25,"column":0}},{"generated":{"line":31,"column":0},"source":"index.js","original":{"line":26,"column":0}},{"generated":{"line":32,"column":0},"source":"index.js","original":{"line":27,"column":0}},{"generated":{"line":33,"column":0},"source":"index.js","original":{"line":28,"column":0}},{"generated":{"line":34,"column":0},"source":"index.js","original":{"line":29,"column":0}},{"generated":{"line":35,"column":0},"source":"index.js","original":{"line":30,"column":0}},{"generated":{"line":36,"column":0},"source":"index.js","original":{"line":31,"column":0}},{"generated":{"line":37,"column":0},"source":"index.js","original":{"line":32,"column":0}},{"generated":{"line":38,"column":0},"source":"index.js","original":{"line":33,"column":0}},{"generated":{"line":39,"column":0},"source":"index.js","original":{"line":34,"column":0}},{"generated":{"line":40,"column":0},"source":"index.js","original":{"line":35,"column":0}},{"generated":{"line":41,"column":0},"source":"index.js","original":{"line":37,"column":0}},{"generated":{"line":42,"column":0},"source":"index.js","original":{"line":38,"column":0}},{"generated":{"line":43,"column":0},"source":"index.js","original":{"line":39,"column":0}},{"generated":{"line":44,"column":0},"source":"index.js","original":{"line":41,"column":0}},{"generated":{"line":45,"column":0},"source":"index.js","original":{"line":42,"column":0}},{"generated":{"line":46,"column":0},"source":"index.js","original":{"line":43,"column":0}},{"generated":{"line":47,"column":0},"source":"index.js","original":{"line":44,"column":0}},{"generated":{"line":48,"column":0},"source":"index.js","original":{"line":46,"column":0}},{"generated":{"line":49,"column":0},"source":"index.js","original":{"line":47,"column":0}},{"generated":{"line":50,"column":0},"source":"index.js","original":{"line":48,"column":0}},{"generated":{"line":51,"column":0},"source":"index.js","original":{"line":49,"column":0}},{"generated":{"line":52,"column":0},"source":"index.js","original":{"line":50,"column":0}},{"generated":{"line":53,"column":0},"source":"index.js","original":{"line":51,"column":0}},{"generated":{"line":54,"column":0},"source":"index.js","original":{"line":52,"column":0}},{"generated":{"line":55,"column":0},"source":"index.js","original":{"line":54,"column":0}},{"generated":{"line":56,"column":0},"source":"index.js","original":{"line":55,"column":0}},{"generated":{"line":57,"column":0},"source":"index.js","original":{"line":56,"column":0}},{"generated":{"line":58,"column":0},"source":"index.js","original":{"line":57,"column":0}},{"generated":{"line":59,"column":0},"source":"index.js","original":{"line":58,"column":0}},{"generated":{"line":60,"column":0},"source":"index.js","original":{"line":60,"column":0}},{"generated":{"line":61,"column":0},"source":"index.js","original":{"line":61,"column":0}},{"generated":{"line":62,"column":0},"source":"index.js","original":{"line":63,"column":0}},{"generated":{"line":63,"column":0},"source":"index.js","original":{"line":64,"column":0}},{"generated":{"line":64,"column":0},"source":"index.js","original":{"line":66,"column":0}},{"generated":{"line":65,"column":0},"source":"index.js","original":{"line":67,"column":0}},{"generated":{"line":66,"column":0},"source":"index.js","original":{"line":69,"column":0}},{"generated":{"line":67,"column":0},"source":"index.js","original":{"line":70,"column":0}},{"generated":{"line":68,"column":0},"source":"index.js","original":{"line":71,"column":0}},{"generated":{"line":69,"column":0},"source":"index.js","original":{"line":72,"column":0}},{"generated":{"line":70,"column":0},"source":"index.js","original":{"line":74,"column":0}},{"generated":{"line":71,"column":0},"source":"index.js","original":{"line":75,"column":0}},{"generated":{"line":72,"column":0},"source":"index.js","original":{"line":76,"column":0}},{"generated":{"line":73,"column":0},"source":"index.js","original":{"line":77,"column":0}},{"generated":{"line":74,"column":0},"source":"index.js","original":{"line":78,"column":0}},{"generated":{"line":75,"column":0},"source":"index.js","original":{"line":79,"column":0}},{"generated":{"line":76,"column":0},"source":"index.js","original":{"line":80,"column":0}},{"generated":{"line":77,"column":0},"source":"index.js","original":{"line":81,"column":0}},{"generated":{"line":78,"column":0},"source":"index.js","original":{"line":82,"column":0}},{"generated":{"line":79,"column":0},"source":"index.js","original":{"line":83,"column":0}},{"generated":{"line":80,"column":0},"source":"index.js","original":{"line":85,"column":0}},{"generated":{"line":81,"column":0},"source":"index.js","original":{"line":86,"column":0}},{"generated":{"line":82,"column":0},"source":"index.js","original":{"line":88,"column":0}},{"generated":{"line":83,"column":0},"source":"index.js","original":{"line":89,"column":0}},{"generated":{"line":84,"column":0},"source":"index.js","original":{"line":90,"column":0}},{"generated":{"line":85,"column":0},"source":"index.js","original":{"line":91,"column":0}},{"generated":{"line":86,"column":0},"source":"index.js","original":{"line":93,"column":0}},{"generated":{"line":87,"column":0},"source":"index.js","original":{"line":94,"column":0}},{"generated":{"line":88,"column":0},"source":"index.js","original":{"line":95,"column":0}},{"generated":{"line":89,"column":0},"source":"index.js","original":{"line":96,"column":0}},{"generated":{"line":90,"column":0},"source":"index.js","original":{"line":97,"column":0}},{"generated":{"line":91,"column":0},"source":"index.js","original":{"line":98,"column":0}},{"generated":{"line":92,"column":0},"source":"index.js","original":{"line":99,"column":0}},{"generated":{"line":93,"column":0},"source":"index.js","original":{"line":100,"column":0}},{"generated":{"line":94,"column":0},"source":"index.js","original":{"line":101,"column":0}},{"generated":{"line":95,"column":0},"source":"index.js","original":{"line":103,"column":0}},{"generated":{"line":96,"column":0},"source":"index.js","original":{"line":104,"column":0}},{"generated":{"line":97,"column":0},"source":"index.js","original":{"line":105,"column":0}},{"generated":{"line":98,"column":0},"source":"index.js","original":{"line":106,"column":0}},{"generated":{"line":99,"column":0},"source":"index.js","original":{"line":107,"column":0}},{"generated":{"line":100,"column":0},"source":"index.js","original":{"line":108,"column":0}},{"generated":{"line":101,"column":0},"source":"index.js","original":{"line":109,"column":0}},{"generated":{"line":102,"column":0},"source":"index.js","original":{"line":110,"column":0}},{"generated":{"line":103,"column":0},"source":"index.js","original":{"line":111,"column":0}},{"generated":{"line":104,"column":0},"source":"index.js","original":{"line":113,"column":0}},{"generated":{"line":105,"column":0},"source":"index.js","original":{"line":115,"column":0}},{"generated":{"line":106,"column":0},"source":"index.js","original":{"line":116,"column":0}},{"generated":{"line":107,"column":0},"source":"index.js","original":{"line":117,"column":0}},{"generated":{"line":108,"column":0},"source":"index.js","original":{"line":118,"column":0}},{"generated":{"line":109,"column":0},"source":"index.js","original":{"line":119,"column":0}},{"generated":{"line":110,"column":0},"source":"index.js","original":{"line":120,"column":0}},{"generated":{"line":111,"column":0},"source":"index.js","original":{"line":121,"column":0}},{"generated":{"line":112,"column":0},"source":"index.js","original":{"line":122,"column":0}},{"generated":{"line":113,"column":0},"source":"index.js","original":{"line":123,"column":0}},{"generated":{"line":114,"column":0},"source":"index.js","original":{"line":125,"column":0}},{"generated":{"line":115,"column":0},"source":"index.js","original":{"line":126,"column":0}},{"generated":{"line":116,"column":0},"source":"index.js","original":{"line":127,"column":0}},{"generated":{"line":117,"column":0},"source":"index.js","original":{"line":128,"column":0}},{"generated":{"line":118,"column":0},"source":"index.js","original":{"line":129,"column":0}},{"generated":{"line":119,"column":0},"source":"index.js","original":{"line":130,"column":0}},{"generated":{"line":120,"column":0},"source":"index.js","original":{"line":131,"column":0}},{"generated":{"line":121,"column":0},"source":"index.js","original":{"line":132,"column":0}},{"generated":{"line":122,"column":0},"source":"index.js","original":{"line":133,"column":0}},{"generated":{"line":123,"column":0},"source":"index.js","original":{"line":135,"column":0}},{"generated":{"line":124,"column":0},"source":"index.js","original":{"line":136,"column":0}},{"generated":{"line":125,"column":0},"source":"index.js","original":{"line":137,"column":0}},{"generated":{"line":126,"column":0},"source":"index.js","original":{"line":138,"column":0}},{"generated":{"line":127,"column":0},"source":"index.js","original":{"line":139,"column":0}},{"generated":{"line":128,"column":0},"source":"index.js","original":{"line":140,"column":0}},{"generated":{"line":129,"column":0},"source":"index.js","original":{"line":141,"column":0}},{"generated":{"line":130,"column":0},"source":"index.js","original":{"line":142,"column":0}},{"generated":{"line":131,"column":0},"source":"index.js","original":{"line":143,"column":0}},{"generated":{"line":132,"column":0},"source":"index.js","original":{"line":144,"column":0}},{"generated":{"line":133,"column":0},"source":"index.js","original":{"line":145,"column":0}},{"generated":{"line":134,"column":0},"source":"index.js","original":{"line":146,"column":0}},{"generated":{"line":135,"column":0},"source":"index.js","original":{"line":147,"column":0}},{"generated":{"line":136,"column":0},"source":"index.js","original":{"line":148,"column":0}},{"generated":{"line":137,"column":0},"source":"index.js","original":{"line":149,"column":0}},{"generated":{"line":138,"column":0},"source":"index.js","original":{"line":150,"column":0}},{"generated":{"line":139,"column":0},"source":"index.js","original":{"line":151,"column":0}},{"generated":{"line":140,"column":0},"source":"index.js","original":{"line":152,"column":0}},{"generated":{"line":141,"column":0},"source":"index.js","original":{"line":154,"column":0}},{"generated":{"line":142,"column":0},"source":"index.js","original":{"line":155,"column":0}},{"generated":{"line":143,"column":0},"source":"index.js","original":{"line":156,"column":0}},{"generated":{"line":144,"column":0},"source":"index.js","original":{"line":157,"column":0}},{"generated":{"line":145,"column":0},"source":"index.js","original":{"line":158,"column":0}},{"generated":{"line":146,"column":0},"source":"index.js","original":{"line":159,"column":0}},{"generated":{"line":147,"column":0},"source":"index.js","original":{"line":160,"column":0}},{"generated":{"line":148,"column":0},"source":"index.js","original":{"line":161,"column":0}},{"generated":{"line":149,"column":0},"source":"index.js","original":{"line":162,"column":0}},{"generated":{"line":150,"column":0},"source":"index.js","original":{"line":164,"column":0}},{"generated":{"line":151,"column":0},"source":"index.js","original":{"line":165,"column":0}},{"generated":{"line":152,"column":0},"source":"index.js","original":{"line":166,"column":0}},{"generated":{"line":153,"column":0},"source":"index.js","original":{"line":167,"column":0}},{"generated":{"line":154,"column":0},"source":"index.js","original":{"line":168,"column":0}},{"generated":{"line":155,"column":0},"source":"index.js","original":{"line":169,"column":0}},{"generated":{"line":156,"column":0},"source":"index.js","original":{"line":170,"column":0}},{"generated":{"line":157,"column":0},"source":"index.js","original":{"line":171,"column":0}},{"generated":{"line":158,"column":0},"source":"index.js","original":{"line":172,"column":0}},{"generated":{"line":159,"column":0},"source":"index.js","original":{"line":173,"column":0}},{"generated":{"line":160,"column":0},"source":"index.js","original":{"line":175,"column":0}},{"generated":{"line":161,"column":0},"source":"index.js","original":{"line":176,"column":0}},{"generated":{"line":162,"column":0},"source":"index.js","original":{"line":177,"column":0}},{"generated":{"line":163,"column":0},"source":"index.js","original":{"line":178,"column":0}},{"generated":{"line":164,"column":0},"source":"index.js","original":{"line":179,"column":0}},{"generated":{"line":165,"column":0},"source":"index.js","original":{"line":180,"column":0}},{"generated":{"line":166,"column":0},"source":"index.js","original":{"line":181,"column":0}},{"generated":{"line":167,"column":0},"source":"index.js","original":{"line":182,"column":0}},{"generated":{"line":168,"column":0},"source":"index.js","original":{"line":183,"column":0}},{"generated":{"line":169,"column":0},"source":"index.js","original":{"line":184,"column":0}},{"generated":{"line":170,"column":0},"source":"index.js","original":{"line":185,"column":0}},{"generated":{"line":171,"column":0},"source":"index.js","original":{"line":187,"column":0}},{"generated":{"line":172,"column":0},"source":"index.js","original":{"line":188,"column":0}},{"generated":{"line":173,"column":0},"source":"index.js","original":{"line":189,"column":0}},{"generated":{"line":174,"column":0},"source":"index.js","original":{"line":190,"column":0}},{"generated":{"line":175,"column":0},"source":"index.js","original":{"line":191,"column":0}},{"generated":{"line":176,"column":0},"source":"index.js","original":{"line":192,"column":0}},{"generated":{"line":177,"column":0},"source":"index.js","original":{"line":193,"column":0}},{"generated":{"line":178,"column":0},"source":"index.js","original":{"line":194,"column":0}},{"generated":{"line":179,"column":0},"source":"index.js","original":{"line":195,"column":0}},{"generated":{"line":180,"column":0},"source":"index.js","original":{"line":196,"column":0}},{"generated":{"line":181,"column":0},"source":"index.js","original":{"line":197,"column":0}},{"generated":{"line":182,"column":0},"source":"index.js","original":{"line":199,"column":0}},{"generated":{"line":183,"column":0},"source":"index.js","original":{"line":200,"column":0}},{"generated":{"line":184,"column":0},"source":"index.js","original":{"line":202,"column":0}},{"generated":{"line":185,"column":0},"source":"index.js","original":{"line":203,"column":0}},{"generated":{"line":186,"column":0},"source":"index.js","original":{"line":204,"column":0}},{"generated":{"line":187,"column":0},"source":"index.js","original":{"line":205,"column":0}},{"generated":{"line":188,"column":0},"source":"index.js","original":{"line":206,"column":0}},{"generated":{"line":189,"column":0},"source":"index.js","original":{"line":207,"column":0}},{"generated":{"line":190,"column":0},"source":"index.js","original":{"line":208,"column":0}},{"generated":{"line":191,"column":0},"source":"index.js","original":{"line":209,"column":0}},{"generated":{"line":192,"column":0},"source":"index.js","original":{"line":210,"column":0}},{"generated":{"line":193,"column":0},"source":"index.js","original":{"line":211,"column":0}},{"generated":{"line":194,"column":0},"source":"index.js","original":{"line":213,"column":0}},{"generated":{"line":195,"column":0},"source":"index.js","original":{"line":214,"column":0}},{"generated":{"line":196,"column":0},"source":"index.js","original":{"line":215,"column":0}},{"generated":{"line":197,"column":0},"source":"index.js","original":{"line":216,"column":0}},{"generated":{"line":198,"column":0},"source":"index.js","original":{"line":217,"column":0}},{"generated":{"line":199,"column":0},"source":"index.js","original":{"line":218,"column":0}},{"generated":{"line":200,"column":0},"source":"index.js","original":{"line":219,"column":0}},{"generated":{"line":201,"column":0},"source":"index.js","original":{"line":220,"column":0}},{"generated":{"line":202,"column":0},"source":"index.js","original":{"line":221,"column":0}},{"generated":{"line":203,"column":0},"source":"index.js","original":{"line":222,"column":0}},{"generated":{"line":204,"column":0},"source":"index.js","original":{"line":223,"column":0}},{"generated":{"line":205,"column":0},"source":"index.js","original":{"line":224,"column":0}},{"generated":{"line":206,"column":0},"source":"index.js","original":{"line":225,"column":0}},{"generated":{"line":207,"column":0},"source":"index.js","original":{"line":226,"column":0}},{"generated":{"line":208,"column":0},"source":"index.js","original":{"line":227,"column":0}},{"generated":{"line":209,"column":0},"source":"index.js","original":{"line":228,"column":0}},{"generated":{"line":210,"column":0},"source":"index.js","original":{"line":229,"column":0}},{"generated":{"line":211,"column":0},"source":"index.js","original":{"line":230,"column":0}},{"generated":{"line":212,"column":0},"source":"index.js","original":{"line":232,"column":0}},{"generated":{"line":213,"column":0},"source":"index.js","original":{"line":233,"column":0}},{"generated":{"line":214,"column":0},"source":"index.js","original":{"line":235,"column":0}},{"generated":{"line":215,"column":0},"source":"index.js","original":{"line":236,"column":0}},{"generated":{"line":216,"column":0},"source":"index.js","original":{"line":237,"column":0}},{"generated":{"line":217,"column":0},"source":"index.js","original":{"line":238,"column":0}},{"generated":{"line":218,"column":0},"source":"index.js","original":{"line":239,"column":0}},{"generated":{"line":219,"column":0},"source":"index.js","original":{"line":240,"column":0}},{"generated":{"line":220,"column":0},"source":"index.js","original":{"line":241,"column":0}},{"generated":{"line":221,"column":0},"source":"index.js","original":{"line":242,"column":0}},{"generated":{"line":222,"column":0},"source":"index.js","original":{"line":243,"column":0}},{"generated":{"line":223,"column":0},"source":"index.js","original":{"line":244,"column":0}},{"generated":{"line":224,"column":0},"source":"index.js","original":{"line":246,"column":0}},{"generated":{"line":225,"column":0},"source":"index.js","original":{"line":247,"column":0}},{"generated":{"line":226,"column":0},"source":"index.js","original":{"line":248,"column":0}},{"generated":{"line":227,"column":0},"source":"index.js","original":{"line":249,"column":0}},{"generated":{"line":228,"column":0},"source":"index.js","original":{"line":250,"column":0}},{"generated":{"line":229,"column":0},"source":"index.js","original":{"line":251,"column":0}},{"generated":{"line":230,"column":0},"source":"index.js","original":{"line":252,"column":0}},{"generated":{"line":231,"column":0},"source":"index.js","original":{"line":253,"column":0}},{"generated":{"line":232,"column":0},"source":"index.js","original":{"line":254,"column":0}},{"generated":{"line":233,"column":0},"source":"index.js","original":{"line":255,"column":0}},{"generated":{"line":234,"column":0},"source":"index.js","original":{"line":256,"column":0}},{"generated":{"line":235,"column":0},"source":"index.js","original":{"line":257,"column":0}},{"generated":{"line":236,"column":0},"source":"index.js","original":{"line":258,"column":0}},{"generated":{"line":237,"column":0},"source":"index.js","original":{"line":259,"column":0}},{"generated":{"line":238,"column":0},"source":"index.js","original":{"line":260,"column":0}},{"generated":{"line":239,"column":0},"source":"index.js","original":{"line":261,"column":0}},{"generated":{"line":240,"column":0},"source":"index.js","original":{"line":262,"column":0}},{"generated":{"line":241,"column":0},"source":"index.js","original":{"line":263,"column":0}},{"generated":{"line":242,"column":0},"source":"index.js","original":{"line":265,"column":0}},{"generated":{"line":243,"column":0},"source":"index.js","original":{"line":266,"column":0}},{"generated":{"line":244,"column":0},"source":"index.js","original":{"line":268,"column":0}},{"generated":{"line":245,"column":0},"source":"index.js","original":{"line":269,"column":0}},{"generated":{"line":246,"column":0},"source":"index.js","original":{"line":270,"column":0}},{"generated":{"line":247,"column":0},"source":"index.js","original":{"line":271,"column":0}},{"generated":{"line":248,"column":0},"source":"index.js","original":{"line":272,"column":0}},{"generated":{"line":249,"column":0},"source":"index.js","original":{"line":273,"column":0}},{"generated":{"line":250,"column":0},"source":"index.js","original":{"line":274,"column":0}},{"generated":{"line":251,"column":0},"source":"index.js","original":{"line":275,"column":0}},{"generated":{"line":252,"column":0},"source":"index.js","original":{"line":276,"column":0}},{"generated":{"line":253,"column":0},"source":"index.js","original":{"line":277,"column":0}},{"generated":{"line":254,"column":0},"source":"index.js","original":{"line":279,"column":0}},{"generated":{"line":255,"column":0},"source":"index.js","original":{"line":283,"column":0}},{"generated":{"line":256,"column":0},"source":"index.js","original":{"line":284,"column":0}},{"generated":{"line":257,"column":0},"source":"index.js","original":{"line":285,"column":0}},{"name":"observable","generated":{"line":257,"column":4},"source":"index.js","original":{"line":285,"column":6}},{"generated":{"line":257,"column":14},"source":"index.js","original":{"line":285,"column":16}},{"generated":{"line":257,"column":17},"source":"index.js","original":{"line":285,"column":19}},{"name":"document","generated":{"line":257,"column":38},"source":"index.js","original":{"line":285,"column":29}},{"generated":{"line":257,"column":46},"source":"index.js","original":{"line":285,"column":37}},{"name":"querySelector","generated":{"line":257,"column":47},"source":"index.js","original":{"line":285,"column":38}},{"generated":{"line":257,"column":60},"source":"index.js","original":{"line":285,"column":29}},{"generated":{"line":257,"column":61},"source":"index.js","original":{"line":285,"column":52}},{"generated":{"line":257,"column":67},"source":"index.js","original":{"line":285,"column":29}},{"generated":{"line":257,"column":68},"source":"index.js","original":{"line":285,"column":19}},{"generated":{"line":257,"column":70},"source":"index.js","original":{"line":285,"column":61}},{"generated":{"line":257,"column":77},"source":"index.js","original":{"line":285,"column":19}},{"name":"pipe","generated":{"line":257,"column":79},"source":"index.js","original":{"line":285,"column":70}},{"generated":{"line":257,"column":83},"source":"index.js","original":{"line":285,"column":19}},{"generated":{"line":257,"column":84},"source":"index.js","original":{"line":286,"column":2}},{"generated":{"line":257,"column":111},"source":"index.js","original":{"line":286,"column":13}},{"generated":{"line":257,"column":123},"source":"index.js","original":{"line":286,"column":19}},{"generated":{"line":258,"column":0},"source":"index.js","original":{"line":287,"column":4}},{"generated":{"line":259,"column":0},"source":"index.js","original":{"line":288,"column":4}},{"name":"ajax","generated":{"line":259,"column":9},"source":"index.js","original":{"line":288,"column":11}},{"name":"getJSON","generated":{"line":259,"column":20},"source":"index.js","original":{"line":288,"column":16}},{"generated":{"line":259,"column":27},"source":"index.js","original":{"line":288,"column":11}},{"generated":{"line":259,"column":28},"source":"index.js","original":{"line":288,"column":24}},{"generated":{"line":259,"column":74},"source":"index.js","original":{"line":288,"column":11}},{"name":"pipe","generated":{"line":259,"column":76},"source":"index.js","original":{"line":288,"column":72}},{"generated":{"line":259,"column":80},"source":"index.js","original":{"line":288,"column":11}},{"generated":{"line":259,"column":81},"source":"index.js","original":{"line":289,"column":6}},{"generated":{"line":259,"column":102},"source":"index.js","original":{"line":289,"column":11}},{"generated":{"line":259,"column":103},"source":"index.js","original":{"line":289,"column":6}},{"generated":{"line":259,"column":104},"source":"index.js","original":{"line":288,"column":11}},{"generated":{"line":259,"column":106},"source":"index.js","original":{"line":290,"column":6}},{"generated":{"line":259,"column":126},"source":"index.js","original":{"line":290,"column":10}},{"name":"complete","generated":{"line":260,"column":0},"source":"index.js","original":{"line":291,"column":8}},{"name":"complete","generated":{"line":260,"column":4},"source":"index.js","original":{"line":291,"column":8}},{"generated":{"line":260,"column":12},"source":"index.js","original":{"line":290,"column":10}},{"generated":{"line":260,"column":34},"source":"index.js","original":{"line":291,"column":19}},{"name":"console","generated":{"line":261,"column":0},"source":"index.js","original":{"line":292,"column":10}},{"name":"console","generated":{"line":261,"column":6},"source":"index.js","original":{"line":292,"column":10}},{"generated":{"line":261,"column":13},"source":"index.js","original":{"line":292,"column":17}},{"name":"log","generated":{"line":261,"column":14},"source":"index.js","original":{"line":292,"column":18}},{"generated":{"line":261,"column":17},"source":"index.js","original":{"line":292,"column":10}},{"generated":{"line":262,"column":0},"source":"index.js","original":{"line":293,"column":9}},{"generated":{"line":263,"column":0},"source":"index.js","original":{"line":290,"column":10}},{"generated":{"line":263,"column":3},"source":"index.js","original":{"line":290,"column":6}},{"generated":{"line":263,"column":4},"source":"index.js","original":{"line":288,"column":11}},{"generated":{"line":263,"column":5},"source":"index.js","original":{"line":288,"column":4}},{"generated":{"line":264,"column":0},"source":"index.js","original":{"line":296,"column":3}},{"generated":{"line":264,"column":1},"source":"index.js","original":{"line":286,"column":2}},{"generated":{"line":264,"column":2},"source":"index.js","original":{"line":285,"column":19}},{"generated":{"line":264,"column":3},"source":"index.js","original":{"line":298,"column":2}},{"generated":{"line":265,"column":0},"source":"index.js","original":{"line":285,"column":19}},{"generated":{"line":265,"column":1},"source":"index.js","original":{"line":285,"column":0}},{"generated":{"line":265,"column":3},"source":"index.js","original":{"line":301,"column":0}},{"generated":{"line":267,"column":0},"source":"index.js","original":{"line":302,"column":0}},{"name":"subscription","generated":{"line":267,"column":4},"source":"index.js","original":{"line":302,"column":6}},{"generated":{"line":267,"column":16},"source":"index.js","original":{"line":302,"column":18}},{"name":"observable","generated":{"line":267,"column":19},"source":"index.js","original":{"line":302,"column":21}},{"generated":{"line":267,"column":29},"source":"index.js","original":{"line":302,"column":31}},{"name":"subscribe","generated":{"line":267,"column":30},"source":"index.js","original":{"line":302,"column":32}},{"generated":{"line":267,"column":39},"source":"index.js","original":{"line":302,"column":21}},{"generated":{"line":267,"column":40},"source":"index.js","original":{"line":302,"column":42}},{"name":"next","generated":{"line":268,"column":0},"source":"index.js","original":{"line":303,"column":2}},{"name":"next","generated":{"line":268,"column":2},"source":"index.js","original":{"line":303,"column":2}},{"generated":{"line":268,"column":6},"source":"index.js","original":{"line":302,"column":42}},{"name":"value","generated":{"line":268,"column":22},"source":"index.js","original":{"line":303,"column":7}},{"generated":{"line":268,"column":27},"source":"index.js","original":{"line":302,"column":42}},{"generated":{"line":268,"column":29},"source":"index.js","original":{"line":303,"column":14}},{"generated":{"line":269,"column":0},"source":"index.js","original":{"line":304,"column":4}},{"name":"console","generated":{"line":270,"column":0},"source":"index.js","original":{"line":305,"column":4}},{"name":"console","generated":{"line":270,"column":4},"source":"index.js","original":{"line":305,"column":4}},{"generated":{"line":270,"column":11},"source":"index.js","original":{"line":305,"column":11}},{"name":"log","generated":{"line":270,"column":12},"source":"index.js","original":{"line":305,"column":12}},{"generated":{"line":270,"column":15},"source":"index.js","original":{"line":305,"column":4}},{"name":"value","generated":{"line":270,"column":16},"source":"index.js","original":{"line":305,"column":16}},{"generated":{"line":270,"column":21},"source":"index.js","original":{"line":305,"column":4}},{"generated":{"line":271,"column":0},"source":"index.js","original":{"line":306,"column":3}},{"generated":{"line":271,"column":3},"source":"index.js","original":{"line":302,"column":42}},{"name":"complete","generated":{"line":272,"column":0},"source":"index.js","original":{"line":307,"column":2}},{"name":"complete","generated":{"line":272,"column":2},"source":"index.js","original":{"line":307,"column":2}},{"generated":{"line":272,"column":10},"source":"index.js","original":{"line":302,"column":42}},{"generated":{"line":272,"column":32},"source":"index.js","original":{"line":307,"column":13}},{"name":"console","generated":{"line":273,"column":0},"source":"index.js","original":{"line":308,"column":4}},{"name":"console","generated":{"line":273,"column":4},"source":"index.js","original":{"line":308,"column":4}},{"generated":{"line":273,"column":11},"source":"index.js","original":{"line":308,"column":11}},{"name":"log","generated":{"line":273,"column":12},"source":"index.js","original":{"line":308,"column":12}},{"generated":{"line":273,"column":15},"source":"index.js","original":{"line":308,"column":4}},{"generated":{"line":274,"column":0},"source":"index.js","original":{"line":309,"column":3}},{"generated":{"line":275,"column":0},"source":"index.js","original":{"line":302,"column":42}},{"generated":{"line":275,"column":1},"source":"index.js","original":{"line":302,"column":21}},{"generated":{"line":275,"column":2},"source":"index.js","original":{"line":302,"column":0}}],"sources":{"index.js":"// import { Observable } from \"rxjs\";\r\n// import { interval } from \"rxjs\";\r\n// import { timer } from \"rxjs\";\r\n// an instance of an observable emmiting data to an observer\r\n// const observable = new Observable((subscriber) => {\r\n//   const id = setInterval(() => {\r\n//     subscriber.next(\"testing...\");\r\n//     console.log(`leak of memo`);\r\n//   }, 1000);\r\n\r\n//   // subscriber.complete();\r\n\r\n//   return () => {\r\n//     clearInterval(id);\r\n//   };\r\n// });\r\n\r\n// interval operator with the similar functionality as the observable we have imperatively written above\r\n// const observable = interval(2000);\r\n// const observable = timer(0, 500);\r\n// using subscribe method to pass the data to observer\r\n// saving to the subscription, so that we can unsubscribe from the observable\r\n// const subscription = observable.subscribe(\r\n//   //   {\r\n//   //   next: (value) => {\r\n//   //     console.log(value);\r\n//   //   },\r\n//   //   // completion indication\r\n//   //   complete: () => {\r\n//   //     console.log(`complete called in observable`);\r\n//   //   },\r\n//   //   // error handling\r\n//   //   error: (err) => {\r\n//   //     console.error(err);\r\n//   //   },\r\n\r\n//   // }\r\n//   console.log\r\n// );\r\n\r\n// unsubscribe after 4 seconds\r\n// setTimeout(() => {\r\n//   subscription.unsubscribe();\r\n// }, 4000);\r\n\r\n// An ex. of a syncronous observable\r\n// an instance of an observable emmiting data to an observer\r\n// const observable = new Observable((subscriber) => {\r\n//   // calling mutiple nexts\r\n//   subscriber.next(\"Hello hobbit\");\r\n//   subscriber.error(\"Test error\");\r\n//   subscriber.next(\"Ready to visit the Middle Earth?\");\r\n\r\n//   // manually terminating the observable, to prevent the memo leak\r\n//   subscriber.complete();\r\n//   // won't run\r\n//   subscriber.next(\"Or MORDOR?\");\r\n// });\r\n\r\n// // fromEvent operator\r\n// import { fromEvent } from \"rxjs\";\r\n\r\n// const observable = fromEvent(document, \"click\");\r\n// const subscription = observable.subscribe(console.log);\r\n\r\n// of, from operators\r\n// import { of, from } from \"rxjs\";\r\n\r\n// // const observable = of([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\r\n// // const observable = from([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\r\n// // const observable = from(\"LOTR\");\r\n// const observable = from(fetch(\"https://jsonplaceholder.typicode.com/todos/1\"));\r\n\r\n// // const subscription = observable.subscribe(console.log);\r\n// const subscription = observable.subscribe({\r\n//   next(value) {\r\n//     console.log(value);\r\n//   },\r\n//   complete() {\r\n//     console.log(`Complete!`);\r\n//   },\r\n// });\r\n// console.log(`hello`);\r\n\r\n// import { of, from } from \"rxjs\";\r\n// import { map } from \"rxjs/operators\";\r\n\r\n// // original observable\r\n// const observable = of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\r\n// // cloned observable\r\n// // const cloneObservable = observable.pipe(map((value) => `${value}$`));\r\n\r\n// // subscribing to the original observable with the observer\r\n// const subscription = observable.subscribe({\r\n//   next(value) {\r\n//     console.log(value);\r\n//   },\r\n//   complete() {\r\n//     console.log(`DONE`);\r\n//   },\r\n// });\r\n\r\n// // // subscribing to the clone observable with yet another observer\r\n// // const subscription2 = cloneObservable.subscribe({\r\n// //   next(value) {\r\n// //     console.log(value);\r\n// //   },\r\n// //   complete() {\r\n// //     console.log(`DONE`);\r\n// //   },\r\n// // });\r\n\r\n// console.log(`Here`);\r\n\r\n// import { of, from, fromEvent } from \"rxjs\";\r\n// import { map, pluck, filter } from \"rxjs/operators\";\r\n// // listening or a keydown event on the doc\r\n// const observable = fromEvent(document, \"keydown\").pipe(\r\n//   // map((event) => event.code)\r\n//   // pluck(\"code\"),\r\n//   // filter((code) => code === \"Space\")\r\n//   map((event) => event.code === \"Space\" && \"Space\")\r\n// );\r\n\r\n// // subscribing to the original observable with the observer\r\n// const subscription = observable.subscribe({\r\n//   next(value) {\r\n//     console.log(value);\r\n//   },\r\n//   complete() {\r\n//     console.log(`DONE`);\r\n//   },\r\n// });\r\n\r\n// // reduce, take, scan operators\r\n// // import { of } from \"rxjs\";\r\n// import { interval } from \"rxjs\";\r\n// import { reduce, take, scan, tap } from \"rxjs/operators\";\r\n// // listening or a keydown event on the doc\r\n// // const observable = of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10).pipe(\r\n// const observable = interval(200).pipe(\r\n//   take(5),\r\n//   // tap((val) => console.log(val)),\r\n//   // tap(console.log),\r\n//   tap({\r\n//     next(val) {\r\n//       console.log(val);\r\n//     },\r\n//   }),\r\n//   reduce((acc, val) => acc + val, 0)\r\n//   // scan((acc, val) => acc + val, 0)\r\n// );\r\n\r\n// // subscribing to the original observable with the observer\r\n// const subscription = observable.subscribe({\r\n//   next(value) {\r\n//     console.log(value);\r\n//   },\r\n//   complete() {\r\n//     console.log(`DONE`);\r\n//   },\r\n// });\r\n\r\n// import { fromEvent } from \"rxjs\";\r\n// import { map } from \"rxjs/operators\";\r\n// import { ajax } from \"rxjs/ajax\";\r\n// // listening or a keydown event on the doc\r\n// // const observable = of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10).pipe(\r\n// const observable = fromEvent(document.querySelector(\"#btn\"), \"click\").pipe(\r\n//   map(() => {\r\n//     return ajax.getJSON(\"https://jsonplaceholder.typicode.com/todos/1\");\r\n//   })\r\n// );\r\n\r\n// // subscribing to the original observable with the observer\r\n// const subscription = observable.subscribe({\r\n//   next(value) {\r\n//     // console.log(value);\r\n//     // as value is an observable we should subscribe to it first to get the final value\r\n//     value.subscribe(console.log);\r\n//   },\r\n//   complete() {\r\n//     console.log(`DONE`);\r\n//   },\r\n// });\r\n\r\n// // using mergeMap operator to flatten the observables\r\n// import { fromEvent, interval } from \"rxjs\";\r\n// import { map, mergeMap, take, tap } from \"rxjs/operators\";\r\n// import { ajax } from \"rxjs/ajax\";\r\n// // listening or a keydown event on the doc\r\n// // const observable = of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10).pipe(\r\n// const observable = fromEvent(document.querySelector(\"#btn\"), \"click\").pipe(\r\n//   mergeMap(() => {\r\n//     // return ajax.getJSON(\"https://jsonplaceholder.typicode.com/todos/1\");\r\n//     return interval(1000).pipe(tap(console.log), take(5));\r\n//   })\r\n\r\n//   // take(5)\r\n// );\r\n\r\n// // subscribing to the original observable with the observer\r\n// const subscription = observable.subscribe({\r\n//   next(value) {\r\n//     // no need to subscribe to a value as mergeMap handles that for us\r\n//     console.log(value);\r\n//   },\r\n//   complete() {\r\n//     console.log(`DONE`);\r\n//   },\r\n// });\r\n\r\n// // using switchMap operator to flatten the observables\r\n// import { fromEvent, interval } from \"rxjs\";\r\n// import { map, switchMap, take, tap } from \"rxjs/operators\";\r\n// import { ajax } from \"rxjs/ajax\";\r\n// // listening or a keydown event on the doc\r\n// // const observable = of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10).pipe(\r\n// const observable = fromEvent(document.querySelector(\"#btn\"), \"click\").pipe(\r\n//   switchMap(() => {\r\n//     // return interval(1000).pipe(\r\n//     return ajax.getJSON(\"https://jsonplaceholder.typicode.com/todos/1\").pipe(\r\n//       take(5),\r\n//       tap({\r\n//         complete() {\r\n//           console.log(`Inner observable has completed`);\r\n//         },\r\n//       })\r\n//     );\r\n//   })\r\n\r\n//   // take(5)\r\n// );\r\n\r\n// // subscribing to the original observable with the observer\r\n// const subscription = observable.subscribe({\r\n//   next(value) {\r\n//     // no need to subscribe to a value as switchMap handles that for us\r\n//     console.log(value);\r\n//   },\r\n//   complete() {\r\n//     console.log(`DONE`);\r\n//   },\r\n// });\r\n\r\n// // using concatMap operator to flatten the observables\r\n// import { fromEvent, interval } from \"rxjs\";\r\n// import { map, concatMap, take, tap } from \"rxjs/operators\";\r\n// import { ajax } from \"rxjs/ajax\";\r\n// // listening or a keydown event on the doc\r\n// // const observable = of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10).pipe(\r\n// const observable = fromEvent(document.querySelector(\"#btn\"), \"click\").pipe(\r\n//   concatMap(() => {\r\n//     // return interval(1000).pipe(\r\n//     return ajax.getJSON(\"https://jsonplaceholder.typicode.com/todos/1\").pipe(\r\n//       take(5),\r\n//       tap({\r\n//         complete() {\r\n//           console.log(`Inner observable has completed`);\r\n//         },\r\n//       })\r\n//     );\r\n//   })\r\n\r\n//   // take(5)\r\n// );\r\n\r\n// // subscribing to the original observable with the observer\r\n// const subscription = observable.subscribe({\r\n//   next(value) {\r\n//     // no need to subscribe to a value as concatMap handles that for us\r\n//     console.log(value);\r\n//   },\r\n//   complete() {\r\n//     console.log(`DONE`);\r\n//   },\r\n// });\r\n\r\n// using exhaustMap operator to flatten the observables\r\nimport { fromEvent, interval } from \"rxjs\";\r\nimport { map, exhaustMap, take, tap } from \"rxjs/operators\";\r\nimport { ajax } from \"rxjs/ajax\";\r\n// listening or a keydown event on the doc\r\n// const observable = of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10).pipe(\r\nconst observable = fromEvent(document.querySelector(\"#btn\"), \"click\").pipe(\r\n  exhaustMap(() => {\r\n    // return interval(1000).pipe(\r\n    return ajax.getJSON(\"https://jsonplaceholder.typicode.com/todos/1\").pipe(\r\n      take(5),\r\n      tap({\r\n        complete() {\r\n          console.log(`Inner observable has completed`);\r\n        },\r\n      })\r\n    );\r\n  })\r\n\r\n  // take(5)\r\n);\r\n\r\n// subscribing to the original observable with the observer\r\nconst subscription = observable.subscribe({\r\n  next(value) {\r\n    // no need to subscribe to a value as exhaustMap handles that for us\r\n    console.log(value);\r\n  },\r\n  complete() {\r\n    console.log(`DONE`);\r\n  },\r\n});\r\n"},"lineCount":null}},"error":null,"hash":"3cd00c6fadb5156a878799b970df206c","cacheData":{"env":{}}}